					 				 一、jq基础
  
  
一、jQuery介绍
1.1 jQuery概述
jQuery的概述
	jQuery是一个快速、 简洁的JavaScript框架。 jQuery设计的宗旨是"write Less，Do More"，即倡导写更少的代
	码，做更多的事情。JQuery封装 了JavaScript常用的功能代码，提供了-套易于使用的API，可以跨多种浏览器工
	作,使HTML文档的遍历和操作、事件处理、动画设计和Ajax交互等操作变得更加简单。
1.2 jQuery框架的下载与引入
	jQuery的官方下载
	●jQuery的官方下载地址: http://www.jquery.com
	jQuery的版本(了解)
  
	●1.x:兼容|E678，使用最为广泛的，官方只做BUG维护，功能不再新增。因此一般项目来说，使用1.x版本就
	可以了，最终版本: 1.12.4 (2016年5月20日)
	●2.x .不兼容IE678。很少有人使用官方只做BI JG维护，功能不再新增。如果不考点兼容低版本的浏览器可以
	使用2.x,最终版本: 2.2.4 (2016年5月20日)
	●3.x:不兼容IE678，只支持最新的浏览器。除非特殊要求，一般不会使用3.x版本的 ，很多老的jQuery插件不
	支持这个版本。目前该版本是官方主要更新维护的版本
	●开发版本与生产版本，命名为jQuery-x.x.x.js为开发版本，命名为jQuery-x.x.x.min.js为生产版本,开发版本
	源码格式良好，有代码缩进和代码注释，方便开发人员查看源码，但体积稍大。而生产版本没有代码缩进和注
	释，且去掉了换行和空行，不方便发人员查看源码,但体积很小。
	
jQuery的引入
	
	1.把外部的jQuery文件复制到当前的项目中
	2.在需要使用jQuery的html中使用js的引入方式进行引入，如下:
	<script type="text/javascript" src="jquery-x.x.x.js></script>
	
1.1jQuery引入成功的测试:

	<!DOCTYPE html>
	<html lang="en">
	<head>
    		<meta charset="UTF-8">
    		<meta name="viewport" content="width=device-width, initial-scale=1.0">
    		<title>Document</title>
	</head>
	<style>
	</style>
	<script src="D:\桌面\jquery\production\jquery-3.4.1.slim.min.js"> </script>

	<!--
    		在jQuery中有一个核心函数叫jQuery，可以被简化成一个$
   		 调用这个jQuery函数参数需要传递一个匿名函数
    		当页面加载完毕就会执行这个匿名函数
    		就相当于加载事件(window.onload=function());
    		格式：
       			 jQuery(function(){
           			 页面加载事件
        			});
        			$ (function(){

        			});

	-->

	<script > 
    		$(function(){
        		      alert(1);
    		});

	</script>
    

	<body>
    
	</body>
	</html>	

	
1.2jQuery中页面加载事件和js中加载事件的区别:
	<!DOCTYPE html>
	<html lang="en">
	<head>
    		<meta charset="UTF-8">
    		<meta name="viewport" content="width=device-width, initial-scale=1.0">
    		<title>jQuery中页面加载事件和js中加载事件的区别</title>
	</head>
	<script src="D:\javascript 工程\Jq\js\jquery-3.4.1.slim.min.js"> </script>
	<script>
    		/*
       			jQuery中页面加载事件和js中页面加载事件的区别、
       			 js中页面加载事件：
            			只能写一个
            			写多个后面会被覆盖前面的。
		*/
     		window.onload = function(){
       			 alert(1);
    		}

    		window.onload = function(){
        			alert(2);
    		}




    		/*
    			jQuery中页面加载事件：
    			写多个，都会被执行
    
    
    
   		 */
    		$(function(){
       			alert(3);
    		});
    		$(function(){
        			alert(4);
    		});
	</script>
	<body>
   		<div>我是一个div</div> 
	</body>
	</html>


	
1.3 jQuery对象与js对象之间的转换
jQuery本质上虽然也是js，但如果使用jQuery的属性和方法那么必须保证对象是Query对象，而不是s方式获得的
DOM对象，二者的API方法不能混合使用， 若想使用对方的API，需要进行对象的转换。
使用js方式获取的对象是js的DOM对象，使用jQuery方式获取的对象是jQuery对象。两者的转换关系如下:
●==jsS的DOM对象转换成Query对象== ，语法: $(js的ON对象)
●==jQuery对象转换成js对象== ，语法: jqueryx对象[索引] 或jquery对象.get(索引)
代码演示:
1.演示使用sS的DOM对象方式、jquery对象方式获取div中的文本数据
2.演示将js的DOM对象转换成jquery对象，再使用转换后的jquery对象方式获取div中的数据
3.演示将jquery对象转换成js的DOM对象，再使用转换后js的DOM对象方式获取div中的数据
<IDOCTYPE html>
<htm1>
	<head>
		<meta charset-"utf-8">
	<title></title>
	<!--引入jQuery -->
	<script type- text/javascript" src-" ../js/jquery-3.3.1.nin.js" ></script>
	<1--测试jQuery -->
















<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<script src="D:\javascript 工程\Jq\js\jquery-3.4.1.slim.min.js"> </script>
<script>
    /*
    jQuery对象与js对象的相互转换
    jQuery的本质是一个数组，数组中包含了多个dom对象(document对象)
    var jQuery = (dom对象,dom对象,dom对象,dom对象,dom对象,....);
    注意：
        jQuery对象不能使用dom对象中属性和方法
    同理：dom对象也不能使用jQuery对象中的属性和方法
    但是二者之间可以相互转换的。

    转换格式：
    1.dom对象-->jQuery对象：穿马甲
    格式：
        dom对象-->$(dom对象);

    2.jQuery对象转换-->dom对象：脱马甲，取出jQuery数组中的dom对象
    格式：
        第一种方式    jQuery对象-->jQuery对象[索引];
        第二种方式    jQuery对象-->jQuery对象,get(索引);
    */

    $(function(){
        /*
        使用dom对象获取id是myDiv的标签
        获取标签体：dom对象.innerHTML
        摄制标签体：dom对象.innerHTML=新的标签体

        */
        var myDivELe = document.getElementById("myDiv");
        //alert(myDivELe.innerHTML);


        /*
        使用jQuery对象获取id是myDiv的标签
        在jQuery对象中设置标签体和获取标签体封装为一个函数，函数名叫html
        获取标签体：jQuery对象.html();
        设置标签体：jQuery对象.html(新的标签体);
        */


        var $myDivELe = $("#myDiv");
        //alert($myDivELe.html());

        //1.dom对象-->jQuery对象：穿马甲
        var $mm = $(myDivELe);
        $mm.html("你是一个Div");
        //$mm.innerHtml="2";//错误，jQuery不能使用dom对象的属性和方法；




        //2.jQuery对象--->dom对象：脱马甲，取出jQuery数组中的dom对象
        var d1 = $myDivELe[0];
        d1.innerHTML = "他是一个div";
        
        var d2 = $myDivELe.get(0);
        alert(d2.innerHTML);
        //alert(d2.html());
        



    });

</script>
<body>
    <div id ="myDiv">我是一个div</div>
</body>
</html>

	
  
  




二、jQuery选择器
2.1基本选择器：

●语法
选择器名称          		语法                               解释
标签选择器(元素选择器)          $("标签名称")                获得所有匹配标签名称的于元素
id选择器                                $(" #id的属性值")          获得与指定id属性值匹配的元素
类选择器                                $(".class的属性值")        获得与指定的class属性值匹配的元素
                    
需求
      ●改变id为one的元素的背景色为红色
      ●改变元素名为<div>的所有元素的背景色为红色
      ●改变class为mini的所有元素的背景色为红色
      ●改变所有的<span>元素和id为two的元素的背景色为红色


实现:













































































2.2层级选择器
语法:
重点:
       ●获得A元素内部的所有的B元素: $("A日") ---后代选择器(包含子孙)
       ●获得A元素下面的所有B子元素: $("A> B")只有儿子,没有孙子
       
了解:
       ●获得A元素同级下一个B元素: $("A+B") 下一个兄弟、
       ●获得A元素同级所有后面B元素: $("A~ B")后边的所有兄弟
       ●获取A元素的同级B元素: ${("A").siblings("B")获取所有的兄弟
         
需求：
       ●改变<body>内所有<div>的背景色为红色
        ●改变<body>内子<div>的背景色为红色

实现:
       <script type-" text/javascript">
	//<input type=" button" value=" 改变<body> 内所有<div> 的背景色为红色”id="b1"/>
	$(" #b1"). click(function(){
	 	$("body div").css("background-color", "red");



























































2.3属性选择器
语法:

重点:
●获得有属性名的元素: $("A[属性名]")
●获得属性名等于值元素: $("'A[属性名=值]")
●复合属性选择器，多个属性同时过滤: $("A[属性名1!=].[属性名!=值]")

了解:
●获得属性名不等于值元素: $("A[属性名!=值]")
●获得属性名以值开头元素: $("A[属性名^=值]")
.获得属性名以值结尾元素: $("A[属性名$=值]")
●获得属性名含有值元素: $("A[属性名*=值]")


需求:
●含有属性title的div元素背景色为红色
●属性title值等 于test的div元素背景色为红色
●选取有属性id的div元素，然后在结果中选取属性title等于"test"”的div元素背景色为红色



实现:

























































2.4基本过滤选择器

语法:
●获得选择的元素中的第一 个元素: :first
●获得选择的元索中的最后-一个元索: :last
●不包括指定内容的元素例如: :not(selecter)
●偶数，从0开始计数: :even
●奇数，从0开始技术: :odd 
●指定索引(index)元索: :eq(index)
●大于指定索引|(index)元素: :gt(index)
●小于指定索弓(index)元素: :lt(index)
●获得标题，固定写法( <h1> /<h2> .... ) :header

了解:
.获得正在执行的动画,固定写法:animated


































2.5表单属性选择器
语法:

●获得可用元素: :enabled
●获得不可用元素: :disabled
●获得单选/复选框选中的元素(单选radio， 多选checkbox) : :checked
●获得下拉框选中的元素(下列列表select) : :selected
需求:
●利用jQuery对象的val)方法改变表单内可用<input>元素的值
●利用jQuery对象的val)方法改变表单内不可用<input>元素的值
●利用jQuery对象的length属性获取多选框选中的个数
●利用jQuery对象的text()方法获取下拉框选中的内容
实现:
<script type-"text/javascript">
// <input type-"button" value-" 利用jQuery对象的val() 方法改变表单内可用<input type-"text"> 元素的值”id-"b1"/>
$(" #b1").click(function(){
	var $input . S(" inputItvpe-”text'l:enabled");
});





三. jQuery的DOM操作
3.1jQuery操作内容
jQuery操作内容
    1. text()获取或修改元素文本内容类似于dom.innerText
    2. html()获取或修改元素的标签体类似dom.innerHTML
注意:
      1. text()是获取设置所有
      2. html()是获取第一个,设置所有

<!DOCTYPE html>
<html lang-"zh">
<head>
          <meta charset="UTF-8" >
          <title>13-jquery操作内容</title> 
          <!--引入Jquery库文件-->
          <script type-"text/javascript" src="js/jquery-1.8.3.js" ></script>
</head>
<body>
<span>span1</span>
<span>span2</span>










3.2.jQuery操作属性
jQuery操作属性
1. val()获取或修改表单控件的value值等于dom.value
2. prop()获取或修改原生属性值(checked，selected)
3. attr()获取或修改自定义属性值等于dom.setAttribute() dom.getAttribute()


<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" >
	<title>获取属性</title>
</head>
<body>
	<input id="myinput" type-"text" name-"username" value- “张三”/><br />
	<ul>
		<li id="bj" name="beijing" xx="yy">北京</li>
		<li 1d="tj" name="tianjin">天津</li>
	</ul>
	<input type="checkbox" id= "hobby" checked=" checked"/>

</boby>	

</html>	




3.jQuery操作样式
jQuery操作样式
1. css()获取或者修改CSS样式用法
	Css(样式名)获取一个样式 等于dom.style.驼峰样式名
	Css(样式名，样式值)设置-一个样式dom.style.驼峰样式名=样式值
	css({样式名:样式值样式名:样式值})批星设置样式dom.style.cssText =样式名:样式值:样式名:样式值;
	
2. addClass()添加一一个样式

3. removeClass()移除个样式	

4. toggleClass()切换-一个样式

<!DOCTYPE html>
<html lang="zh">
<head>
<meta charset="UTF-8">
<title>15- jquery操作样式</title>
<!--引入Jquery库文件-->
<script src="js/jquery-1.8.3.js"></script>
</head>
<body>
<style>














































































4.jQuery创建和插入对象
●语法
API方法                                                          解释 
append(element)                                      添加成最后一个子元素，两者之间是父子关系
prepend(element)                                    添加成第一个子元素，两者之间是父子关系
$("<A id=“11”>aaa</A>" )                       创建A元素对象同时可以给对象添加属性和标签体
before(element)                                        添加到当前元素的前面，两者之间是兄弟关系
after(element)                                           添加到当前元素的后面,两者之间是兄弟关系
insertBefore(element)                               把元素添加到另外一个元素前面,两者之间是兄弟关系
insertAfter(element)                                  把元素添加到另外一一个元素后面，两者之间是兄弟关系


●代码演示
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
	<head>























5.JQuery删除对象
语法：
API方法                                                          解释
remove()                                                        删除指定元素
empty()                                                          清空指定元素的所有子元素


代码演示：

































五、jQuery动画
5.1显示效果
方法：

方法名称                                                     解释
show([speed],[easing],[fn])                        显示元素方法
hide([spee],[easing],[fn])                            隐藏元素方法
toggle([speed],[easing],[fn])                      切换元素方法，显示的使之隐藏，隐藏的使之显示


参数：
参数名称                                                     解释
speed                                                        三种预定速度之一的字符串("slow","normal","or","fast")或表示动画时长的毫秒数值(如：1000)
easing                                                        用来指定切换效果，默认是"swing"(摆动),可用参数"linear"(直线)
fn                                                               在动画完成时执行的函数，每个元素执行一次
opacity                                                       一个0至1之间表示透明度的数字



实例：








六、jQuery的遍历
jQuery对象本身就是数组对象，通过jQuery选择器获得的都是满足该选择器条件的元素对象的集合体。因此常常
需要对jQuery对象进行遍历。

6.1原始方式遍历
语法：
for(var i=0;i<元素数组.length;i++){
	元素数组[i];
}


6.2jQuery对象方法遍历
语法：
jQuery对象.each(function(index,element{});

其中，
index,就是元素在集合中的索引
element：就是集合中的每一个元素对象


6.3jQuery全局函数遍历
使用jQuery的全局函数each
格式：
jQuery.each(jQuery对象,function(index,element){

});
index,就是元素在集合中的索引
element：就是集合中的每一个元素对象



6.4用增强遍历方式jQuery遍历
格式：
for(var 变量 of jQuery对象  ){
	alert(变量);
}

变量：for循环会依次获取jQuery对象的dom对象赋值给变量















七、jQuery的事件
常用事件
jQuery绑定事件，事件名字没有on

事件名称                                     事件说明
blur                                            事件源失去焦点
focus                                          事件源获取焦点
change                                       内容改变
click                                            单机事件
keydown                                    接受键盘上的所有键盘(键盘按下)
keyup                                         键盘弹起
mouseover                                 鼠标移入
mouseout                                   鼠标移出

7.1 on绑定事件
语法：
jquery元素对象.on(事件名称,function(){
	//逻辑代码
})

其中：事件名称jQuery的事件方法的方法名称，例如：click、mouseout  、focus、  blur 

7.2 off解绑事件
语法
jQuery元素对象.off(事件名称)
其中：参数事件名称如果省略不写，可以解绑该jQuery对象上的所有事件



7.3事件切换
























八、jQuery的插件
8.1jQuery的插件机制
jQuery插件机制概述
jQuery插件机制很简单，就是利用jQuery提供的jQuery.fn.extend()和jQuery.extand()方法，jQuery的功能

jQuery插件机制语法：
语法                                                    解释
jQuery.fn.extend(object)                     对jQuery对象进行方法扩展
jQuery.extend(object)                         对jQuery全局进行方法扩展




8.2.表单校验插件validator
表单校验插件概述
网络上有许多成熟的插件共使用者参考，插件就是将jquery实现的常用操作进行封装，封装后的"小框架就可以叫
做插件，按照插件的语法去操作可以实现很多复杂的功能，而我们需要做的是学会该插件的使用语法即可。表单校
验插件是按照一定的语法编写代码 ，可以使用简单的代码完成复杂的表单校验工作。
表单校验插件的基本语法
开发步骤
●下载iquery-validation插件
●将该插件(也就是-一个js文件)导入到我们的工程中
●在要使用校验插件的html中引入该js文件
●编写表单校验的代码(语法)
	$("form表单的选择器") . validate({
		rules:{
			表单项name值校验规则，
			表单项name值:校验规则... ...
		},
		messages:{
			表单项name值:错误提示信息，
			表单项name值:错误提示信息，

		}


	});

其中. rules是对表单项校验的规则. messages是对应的表单项校验失败后的错误提示信息






九、ajax概述

9.1什么是ajax
Ajax即"Asynchronous Javascript And XML" (异步JavaScript和XML)， 是指一种创建交互式网页应用的网页开
发技术。Ajax=异步JavaScript和XML (标准通用标记语言的子集)。通过在后台与服务器进行少量数据交换，
Ajax可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下,对网页的某部分进行更新。传统
的网页(不使用Ajax )如果需要更新内容，必须重载整个网页页面。

9.2AJAX的应用场景
ajax的应用场景很多，常见的应用场景如下:
检查用户名是否已经被注册
很多站点的注册页面都具备自动检测用户名是否存在的友好提示，该功能整体页面并没有刷新，但仍然可以异步与
服务器端进行数据交换,查询用户的输入的用户名是否在数据库中已经存在。








异步方式发送请求
发送一个请求，不需要等待响应返回，随时可以再发送下一一个请求,即不需要等待。

十.js原生的ajax
10.1js原生的ajax的开发步骤
1 )创建Ajax引擎对象
2 )为Ajax引擎对象绑定监听服务器变化的事件
3 )绑定提交地址
4)发送请求
5 )接收响应数据


10.2 js原生的ajax的代码实现








十一、jQuery框架的ajax
11.1、jQuery框架的ajax简介
jquery是一个优秀的js框架，对js原生的ajax进行了封装，封装后的ajax的操作方法更简洁,功能更强大，与ajax
操作相关的query方法有如下几种，但开发中经常使用的有三种:
请求方式                              语法
GET请求                               $.get(url, [data], [allback], [type])
POST请求                             $.post[url, [data], (callback], [type])
AJAX请求                             $.ajax([settings])

11.2、GET请求方式
概述
通过远程HTTP GET请求载入信息。这是一个简单的GET请求功能，如需复杂的ajax参数设置请使用$.ajax。
语法


11.3POST请求方式
概述
通过远程HTTP POST请求载入信息。这是一一个简单的 POST请求功能，如需复杂的ajax参数设置请使用$.ajax。

语法
jQuery.postlurl, [data], [allback], [type])
其中，参数说明如下:|

参数名称                    解释
url            	请求的服务器端url地址
data  		发送给服务器端的请求参数，格式可以是key=value
callback		回调函数，服务器响应成功后AJAX自动调用函数
type		预期的返回数据的类型，取值可以是xml, html, script, json, text,. defaul等




11.4、AJAX请求方式
概述
通过HTTP请求加载远程数据。jQuery 底层AJAX实现。简单易用的高层实现见get和post方法。$.ajax(方法可以
更加详细的设置底层的参数。

语法
jQuery-axl(settings])

其中，settings是一个s字面量形式的对象 ，格式是(name:value,name:vale... ....，常用的name属性名如下:

属性名称                                          解释
url			       请求的服务器端url地址
async                                              (默认: true)默认设置下，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为false
data			       发送到服务器的数据，可以是键值对形式k=v&k=v
type			       (默认: "GET")请求方式("POST"或"GET"),默认为"GET"
dataType                                        预期服务 器的返回数据的类型，取值可以是xml, html, script, json, text, defaul等
success                                           请求成功后的回调函数
error                                               请求失败时调用此函数



11.5、


